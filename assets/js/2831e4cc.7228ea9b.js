"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9020],{3033:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Notifications","title":"Notifications System","description":"This page documents the Notifications System in Let\'s Stream V2.0, providing details on its features, technical implementation, usage, configuration, and best practices.","source":"@site/../wiki/Notifications.md","sourceDirName":".","slug":"/Notifications","permalink":"/letsstream2/Notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/chintan992/letsstream2/edit/main/wiki/../wiki/Notifications.md","tags":[],"version":"current","frontMatter":{},"sidebar":"wikiSidebar","previous":{"title":"Let\'s Stream V2.0 Wiki","permalink":"/letsstream2/Home"},"next":{"title":"PWA Integration Guide","permalink":"/letsstream2/PWA-Integration"}}');var t=i(4848),r=i(8453);const o={},l="Notifications System",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2},{value:"Core Components",id:"core-components",level:3},{value:"Usage",id:"usage",level:3},{value:"Basic Implementation",id:"basic-implementation",level:4},{value:"Adding New Feature Notifications",id:"adding-new-feature-notifications",level:4},{value:"Version Management",id:"version-management",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Notification Duration",id:"notification-duration",level:4},{value:"Storage",id:"storage",level:4},{value:"User Preferences",id:"user-preferences",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Production Implementation",id:"production-implementation",level:3},{value:"Testing",id:"testing",level:2},{value:"Basic Notification Flow",id:"basic-notification-flow",level:3},{value:"Testing Notification Preferences",id:"testing-notification-preferences",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Future Improvements",id:"future-improvements",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"notifications-system",children:"Notifications System"})}),"\n",(0,t.jsx)(n.p,{children:"This page documents the Notifications System in Let's Stream V2.0, providing details on its features, technical implementation, usage, configuration, and best practices."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The notification system informs authenticated users about new features, updates, and important information. It uses a toast notification pattern and integrates with authentication for personalized, version-aware notifications."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Feature announcement notifications for authenticated users"}),"\n",(0,t.jsx)(n.li,{children:"Version-based notification tracking"}),"\n",(0,t.jsx)(n.li,{children:"User-controlled notification preferences"}),"\n",(0,t.jsx)(n.li,{children:"Persistent storage of viewed notifications and preferences"}),"\n",(0,t.jsx)(n.li,{children:"Support for rich content (links, images)"}),"\n",(0,t.jsx)(n.li,{children:"Automatic re-checking when tab becomes visible"}),"\n",(0,t.jsx)(n.li,{children:"Customizable notification duration"}),"\n",(0,t.jsx)(n.li,{children:"Support for follow-up notifications"}),"\n",(0,t.jsx)(n.li,{children:"Accessibility-friendly implementation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,t.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Feature Notifications API"})," (",(0,t.jsx)(n.code,{children:"src/api/feature-notifications.ts"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface FeatureNotification {\n  id: string;\n  title: string;\n  description: string;\n  version: string;\n  date: string;\n  details?: {\n    link?: string;\n    imageUrl?: string;\n    category?: string;\n  };\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Notification Hook"})," (",(0,t.jsx)(n.code,{children:"src/hooks/use-feature-notifications.ts"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Manages notification state and display logic"}),"\n",(0,t.jsx)(n.li,{children:"Handles version comparison and user acknowledgment"}),"\n",(0,t.jsx)(n.li,{children:"Integrates with authentication context"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h4,{id:"basic-implementation",children:"Basic Implementation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { useFeatureNotifications } from '@/hooks/use-feature-notifications';\n\nfunction App() {\n  useFeatureNotifications();\n  return <YourApp />;\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"adding-new-feature-notifications",children:"Adding New Feature Notifications"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Update the ",(0,t.jsx)(n.code,{children:"feature-notifications.ts"})," file:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const notifications: FeatureNotification[] = [\n  {\n    id: 'feature-2023-1',\n    title: '\ud83c\udfa5 New Feature',\n    description: 'Feature description',\n    version: '1.0.1',\n    date: '2023-12-01',\n    details: {\n      link: '/feature-page',\n      category: 'feature-category',\n    },\n  }\n];\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Update the ",(0,t.jsx)(n.code,{children:"currentVersion"})," to match your deployment:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"return {\n  notifications,\n  currentVersion: '1.0.1',\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"version-management",children:"Version Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Versions follow semantic versioning (MAJOR.MINOR.PATCH)"}),"\n",(0,t.jsx)(n.li,{children:"Users see notifications for versions newer than their last acknowledged version"}),"\n",(0,t.jsx)(n.li,{children:"Version history is stored per user in localStorage"}),"\n",(0,t.jsxs)(n.li,{children:["Version checks occur on:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Initial page load"}),"\n",(0,t.jsx)(n.li,{children:"Tab focus"}),"\n",(0,t.jsx)(n.li,{children:"After authentication"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(n.h4,{id:"notification-duration",children:"Notification Duration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Default: 10 seconds for main notifications"}),"\n",(0,t.jsx)(n.li,{children:"Follow-up notifications: 8 seconds"}),"\n",(0,t.jsx)(n.li,{children:"Can be customized per notification"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"storage",children:"Storage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Version history stored in ",(0,t.jsx)(n.code,{children:"localStorage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Key format: ",(0,t.jsx)(n.code,{children:"lastSeenFeature-${userId}"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Notification preferences stored in Firestore","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Collection: ",(0,t.jsx)(n.code,{children:"user_preferences"})]}),"\n",(0,t.jsxs)(n.li,{children:["Field: ",(0,t.jsx)(n.code,{children:"isNotificationsEnabled"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default value: ",(0,t.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"user-preferences",children:"User Preferences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Users can control notification visibility from their profile settings"}),"\n",(0,t.jsx)(n.li,{children:"Toggle located in Profile \u2192 Settings section"}),"\n",(0,t.jsx)(n.li,{children:"Changes take effect immediately"}),"\n",(0,t.jsx)(n.li,{children:"Preferences persist across sessions"}),"\n",(0,t.jsx)(n.li,{children:"Default enabled for new users"}),"\n",(0,t.jsx)(n.li,{children:"Does not affect critical system notifications"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Content Guidelines"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep titles short and descriptive"}),"\n",(0,t.jsx)(n.li,{children:"Use emojis for visual hierarchy"}),"\n",(0,t.jsx)(n.li,{children:"Include clear call-to-action in descriptions"}),"\n",(0,t.jsx)(n.li,{children:"Provide relevant links for detailed information"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Increment versions for significant changes"}),"\n",(0,t.jsx)(n.li,{children:"Group related features under the same version"}),"\n",(0,t.jsx)(n.li,{children:"Document version changes in changelog"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Experience"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Limit concurrent notifications"}),"\n",(0,t.jsx)(n.li,{children:"Space out follow-up notifications"}),"\n",(0,t.jsx)(n.li,{children:"Provide clear dismissal options"}),"\n",(0,t.jsx)(n.li,{children:"Ensure notifications are not disruptive"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"production-implementation",children:"Production Implementation"}),"\n",(0,t.jsx)(n.p,{children:"For production, replace static notifications with a backend API:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export async function fetchFeatureNotifications(): Promise<FeatureNotificationResponse> {\n  const response = await fetch('/api/feature-notifications');\n  return response.json();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can source notifications from:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Backend database"}),"\n",(0,t.jsx)(n.li,{children:"CMS"}),"\n",(0,t.jsx)(n.li,{children:"GitHub releases API"}),"\n",(0,t.jsx)(n.li,{children:"Feature flag system"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.h3,{id:"basic-notification-flow",children:"Basic Notification Flow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure you're authenticated"}),"\n",(0,t.jsxs)(n.li,{children:["Increment the version number in ",(0,t.jsx)(n.code,{children:"feature-notifications.ts"})]}),"\n",(0,t.jsx)(n.li,{children:"Clear localStorage or use a new user account"}),"\n",(0,t.jsx)(n.li,{children:"Refresh the application"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"testing-notification-preferences",children:"Testing Notification Preferences"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Navigate to Profile \u2192 Settings"}),"\n",(0,t.jsx)(n.li,{children:'Locate the "Feature Notifications" toggle'}),"\n",(0,t.jsxs)(n.li,{children:["Test the following scenarios:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Toggle notifications off: No new feature notifications should appear"}),"\n",(0,t.jsx)(n.li,{children:"Toggle notifications on: Feature notifications should resume"}),"\n",(0,t.jsx)(n.li,{children:"Close and reopen browser: Preference should persist"}),"\n",(0,t.jsx)(n.li,{children:"Log in on different device: Preference should sync"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Verify that the preference is saved in Firestore","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Check preference in Firestore\nconst userPreferencesRef = doc(db, 'user_preferences', userId);\nconst userPreferencesDoc = await getDoc(userPreferencesRef);\nconsole.log(userPreferencesDoc.data().isNotificationsEnabled);\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notifications not showing:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check authentication status"}),"\n",(0,t.jsx)(n.li,{children:"Verify version numbers"}),"\n",(0,t.jsx)(n.li,{children:"Check localStorage for existing acknowledgments"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Duplicate notifications:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure unique notification IDs"}),"\n",(0,t.jsx)(n.li,{children:"Check version comparison logic"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Missing follow-up notifications:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Verify timing configuration"}),"\n",(0,t.jsx)(n.li,{children:"Check details object structure"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"future-improvements",children:"Future Improvements"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add support for notification categories"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement notification priority levels"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add notification analytics"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support for rich media content"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Add notification preferences"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement offline support"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add notification history view"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add notification scheduling"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support for user-defined notification duration"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add notification sound options"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement notification grouping"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);