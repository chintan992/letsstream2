"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5752],{3717:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"API-Reference","title":"API Reference","description":"This document provides detailed information about the APIs used in Let\'s Stream V2.0.","source":"@site/../wiki/API-Reference.md","sourceDirName":".","slug":"/API-Reference","permalink":"/letsstream2/API-Reference","draft":false,"unlisted":false,"editUrl":"https://github.com/chintan992/letsstream2/edit/main/wiki/../wiki/API-Reference.md","tags":[],"version":"current","frontMatter":{},"sidebar":"wikiSidebar","next":{"title":"Backend Setup Guide","permalink":"/letsstream2/Backend-Setup"}}');var s=i(4848),t=i(8453);const a={},l="API Reference",o={},c=[{value:"Authentication API",id:"authentication-api",level:2},{value:"User Management",id:"user-management",level:3},{value:"Sign Up",id:"sign-up",level:4},{value:"Sign In",id:"sign-in",level:4},{value:"Social Authentication",id:"social-authentication",level:4},{value:"Media API",id:"media-api",level:2},{value:"Movies",id:"movies",level:3},{value:"Get Popular Movies",id:"get-popular-movies",level:4},{value:"Search Movies",id:"search-movies",level:4},{value:"TV Shows",id:"tv-shows",level:3},{value:"Get Popular Shows",id:"get-popular-shows",level:4},{value:"Sports",id:"sports",level:3},{value:"Get Live Matches",id:"get-live-matches",level:4},{value:"Video Streaming APIs",id:"video-streaming-apis",level:2},{value:"Custom Streaming API",id:"custom-streaming-api",level:3},{value:"Get Movie Stream",id:"get-movie-stream",level:4},{value:"Get TV Stream",id:"get-tv-stream",level:4},{value:"Proxy Implementation",id:"proxy-implementation",level:4},{value:"User Data API",id:"user-data-api",level:2},{value:"Watch History",id:"watch-history",level:3},{value:"Add to History",id:"add-to-history",level:4},{value:"Get History",id:"get-history",level:4},{value:"User Preferences",id:"user-preferences",level:3},{value:"Update Preferences",id:"update-preferences",level:4},{value:"Firestore Collections",id:"firestore-collections",level:2},{value:"Collection: userPreferences",id:"collection-userpreferences",level:3},{value:"Collection: watchHistory",id:"collection-watchhistory",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Error Codes",id:"error-codes",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"Configuration",id:"configuration",level:3},{value:"WebSocket Events",id:"websocket-events",level:2},{value:"User Events",id:"user-events",level:3},{value:"Media Events",id:"media-events",level:3},{value:"PWA Events",id:"pwa-events",level:2},{value:"Service Worker",id:"service-worker",level:3},{value:"Push Notifications",id:"push-notifications",level:3},{value:"Authentication Flow",id:"authentication-flow",level:2},{value:"Token Management",id:"token-management",level:3},{value:"Session Management",id:"session-management",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Authentication",id:"authentication",level:3},{value:"Media Operations",id:"media-operations",level:3},{value:"User Operations",id:"user-operations",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(n.p,{children:"This document provides detailed information about the APIs used in Let's Stream V2.0."}),"\n",(0,s.jsx)(n.h2,{id:"authentication-api",children:"Authentication API"}),"\n",(0,s.jsx)(n.h3,{id:"user-management",children:"User Management"}),"\n",(0,s.jsx)(n.h4,{id:"sign-up",children:"Sign Up"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface SignUpParams {\n  email: string;\n  password: string;\n}\n\ninterface SignUpResponse {\n  user: User;\n  token: string;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"sign-in",children:"Sign In"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface SignInParams {\n  email: string;\n  password: string;\n}\n\ninterface SignInResponse {\n  user: User;\n  token: string;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"social-authentication",children:"Social Authentication"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface SocialAuthParams {\n  provider: 'google';\n}\n\ninterface SocialAuthResponse {\n  user: User;\n  token: string;\n  provider: string;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"media-api",children:"Media API"}),"\n",(0,s.jsx)(n.h3,{id:"movies",children:"Movies"}),"\n",(0,s.jsx)(n.h4,{id:"get-popular-movies",children:"Get Popular Movies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface MovieParams {\n  page?: number;\n  language?: string;\n}\n\ninterface MovieResponse {\n  results: Movie[];\n  page: number;\n  total_pages: number;\n  total_results: number;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"search-movies",children:"Search Movies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface SearchParams {\n  query: string;\n  page?: number;\n  include_adult?: boolean;\n  language?: string;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tv-shows",children:"TV Shows"}),"\n",(0,s.jsx)(n.h4,{id:"get-popular-shows",children:"Get Popular Shows"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface TVParams {\n  page?: number;\n  language?: string;\n}\n\ninterface TVResponse {\n  results: TVShow[];\n  page: number;\n  total_pages: number;\n  total_results: number;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sports",children:"Sports"}),"\n",(0,s.jsx)(n.h4,{id:"get-live-matches",children:"Get Live Matches"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface LiveMatchesParams {\n  sport?: string;\n  league?: string;\n  limit?: number;\n}\n\ninterface LiveMatchesResponse {\n  matches: SportMatch[];\n  total: number;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"video-streaming-apis",children:"Video Streaming APIs"}),"\n",(0,s.jsx)(n.h3,{id:"custom-streaming-api",children:"Custom Streaming API"}),"\n",(0,s.jsx)(n.h4,{id:"get-movie-stream",children:"Get Movie Stream"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface MovieStreamParams {\n  id: number;\n}\n\ninterface StreamResponse {\n  source?: {\n    provider: string;\n    files: Array<{\n      file: string;\n      type: string;\n      quality: string;\n      lang: string;\n    }>;\n    headers?: Record<string, string>;\n    subtitles?: Array<any>;\n  };\n  ERROR?: Array<{\n    error: string;\n    what_happened: string;\n    report_issue: string;\n  }>;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"get-tv-stream",children:"Get TV Stream"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface TVStreamParams {\n  id: number;\n  s: number; // season\n  e: number; // episode\n}\n\n// Uses the same StreamResponse interface as Movie Stream\n"})}),"\n",(0,s.jsx)(n.h4,{id:"proxy-implementation",children:"Proxy Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ProxyParams {\n  url: string;\n  headers?: string; // JSON stringified headers\n}\n\n// Example usage\nconst proxyUrl = `${PROXY_URL}/v2?url=${encodeURIComponent(videoUrl)}&headers=${encodeURIComponent(JSON.stringify(headers))}`;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"user-data-api",children:"User Data API"}),"\n",(0,s.jsx)(n.h3,{id:"watch-history",children:"Watch History"}),"\n",(0,s.jsx)(n.h4,{id:"add-to-history",children:"Add to History"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface WatchHistoryEntry {\n  user_id: string;\n  media_id: string;\n  media_type: 'movie' | 'tv';\n  progress: number;\n  timestamp: number;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"get-history",children:"Get History"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface GetHistoryParams {\n  user_id: string;\n  limit?: number;\n  offset?: number;\n}\n\ninterface GetHistoryResponse {\n  history: WatchHistoryEntry[];\n  total: number;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"user-preferences",children:"User Preferences"}),"\n",(0,s.jsx)(n.h4,{id:"update-preferences",children:"Update Preferences"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface UserPreferences {\n  user_id: string;\n  theme?: string;\n  accentColor?: string;\n  isWatchHistoryEnabled: boolean;\n  notifications: {\n    enabled: boolean;\n    types: string[];\n  };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"firestore-collections",children:"Firestore Collections"}),"\n",(0,s.jsx)(n.h3,{id:"collection-userpreferences",children:"Collection: userPreferences"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface UserPreferencesDoc {\n  user_id: string;\n  isWatchHistoryEnabled: boolean;\n  accentColor: string;\n  created_at: Timestamp;\n  updated_at: Timestamp;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"collection-watchhistory",children:"Collection: watchHistory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface WatchHistoryDoc {\n  user_id: string;\n  media_id: string;\n  media_type: 'movie' | 'tv';\n  title: string;\n  poster_path: string;\n  watched_at: Timestamp;\n  progress: number;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.h3,{id:"error-codes",children:"Error Codes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"enum ErrorCode {\n  INVALID_CREDENTIALS = 'auth/invalid-credentials',\n  USER_NOT_FOUND = 'auth/user-not-found',\n  EMAIL_IN_USE = 'auth/email-already-in-use',\n  WEAK_PASSWORD = 'auth/weak-password',\n  NETWORK_ERROR = 'network/error',\n  API_ERROR = 'api/error',\n  RATE_LIMIT = 'api/rate-limit',\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ErrorResponse {\n  code: ErrorCode;\n  message: string;\n  details?: any;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface RateLimitConfig {\n  maxRequests: number;\n  timeWindow: number;\n  errorCode: ErrorCode;\n}\n\nconst defaultConfig: RateLimitConfig = {\n  maxRequests: 100,\n  timeWindow: 60000,\n  errorCode: ErrorCode.RATE_LIMIT,\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"websocket-events",children:"WebSocket Events"}),"\n",(0,s.jsx)(n.h3,{id:"user-events",children:"User Events"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface UserEvent {\n  type: 'presence' | 'status' | 'preferences';\n  user_id: string;\n  data: any;\n  timestamp: number;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"media-events",children:"Media Events"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface MediaEvent {\n  type: 'play' | 'pause' | 'seek' | 'end';\n  media_id: string;\n  user_id: string;\n  timestamp: number;\n  data: {\n    progress?: number;\n    position?: number;\n  };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"pwa-events",children:"PWA Events"}),"\n",(0,s.jsx)(n.h3,{id:"service-worker",children:"Service Worker"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ServiceWorkerEvent {\n  type: 'install' | 'activate' | 'update' | 'error';\n  timestamp: number;\n  details?: any;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"push-notifications",children:"Push Notifications"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface PushNotification {\n  title: string;\n  body: string;\n  icon?: string;\n  data?: {\n    url?: string;\n    action?: string;\n    [key: string]: any;\n  };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,s.jsx)(n.h3,{id:"token-management",children:"Token Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface AuthToken {\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n  user_id: string;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"session-management",children:"Session Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface Session {\n  user: User;\n  tokens: AuthToken;\n  created_at: number;\n  expires_at: number;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const auth = new Auth();\n\n// Sign up\nconst user = await auth.signUp({\n  email: 'user@example.com',\n  password: 'password123'\n});\n\n// Sign in\nconst session = await auth.signIn({\n  email: 'user@example.com',\n  password: 'password123'\n});\n\n// Google sign in\nconst googleUser = await auth.socialAuth({\n  provider: 'google'\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"media-operations",children:"Media Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const media = new MediaAPI();\n\n// Get popular movies\nconst movies = await media.getPopular({\n  page: 1,\n  language: 'en'\n});\n\n// Search content\nconst results = await media.search({\n  query: 'matrix',\n  include_adult: false\n});\n\n// Get live sports\nconst matches = await media.getLiveMatches({\n  sport: 'football',\n  limit: 10\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"user-operations",children:"User Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const userAPI = new UserAPI();\n\n// Update preferences\nawait userAPI.updatePreferences({\n  user_id: 'user123',\n  accentColor: '#ff0000',\n  isWatchHistoryEnabled: true\n});\n\n// Get watch history\nconst history = await userAPI.getHistory({\n  user_id: 'user123',\n  limit: 20\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);